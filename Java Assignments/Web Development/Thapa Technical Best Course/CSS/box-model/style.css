/** ------------------------------------- -->
/**  BOX MODEL IN CSS  (BOX SIZING)
/** ---------------------------------------- --> */

/*? The CSS Box Model consists of four main components:

1. Content: This is the innermost part of the element, which holds the actual content, such as text, images, or other HTML elements.

2. Padding: Padding is the space between the content and the element's border. It provides internal spacing within the element.
            content and border ke beech ka space ko padding kehte hai.
    
3. Border: The border surrounds the padding and content, creating a visible boundary around the element. It can have a thickness, style, and color.

4. Margin: The margin is the space outside the element's border. It separates the element from other elements on the page and controls the spacing between elements. */

/** VERY VERY IMPORTANT  */

/*? CSS box-sizing is a property that controls how the total width and height of an element are calculated, including its content, padding, and border. It has two possible values: content-box (default) and border-box */

/** box-sizing: content-box: */
/*? In the default content-box value, an element's width and height are calculated based on its content area. Padding and border are added to the specified width and height.
This means that if you set the width of an element to 100 pixels, and then add 10 pixels of padding and a 2-pixel border, the element's total width will be 100 + 10 + 2 = 112 pixels. */

/**  box-sizing: border-box:
When using border-box, an element's width and height include its content, padding, and border. Padding and border are subtracted from the specified width and height.
In this case, if you set the width of an element to 100 pixels, and then add 10 pixels of padding and a 2-pixel border, the content area will be adjusted to fit within the specified 100-pixel width, and the padding and border are contained within that. */

/**
Let's explore the box-sizing: border-box; property with a detailed example, considering both width and height.

Example Scenario:
You have a div with a width of 200px, height of 100px, padding of 20px, and a border of 10px. We'll see how the box-sizing property affects this element.

Without box-sizing: border-box; (Default content-box):

<div class="content-box"></div>


.content-box {
  width: 200px;
  height: 100px;
  padding: 20px;
  border: 10px solid black;
  box-sizing: content-box; 
  background-color: lightblue;
}

Width Calculation:

Content Width: 200px
Padding: 20px (left) + 20px (right) = 40px
Border: 10px (left) + 10px (right) = 20px
Total Width: 200px (content) + 40px (padding) + 20px (border) = 260px

Height Calculation:

Content Height: 100px
Padding: 20px (top) + 20px (bottom) = 40px
Border: 10px (top) + 10px (bottom) = 20px
Total Height: 100px (content) + 40px (padding) + 20px (border) = 160px

Result: The div visually occupies 260px by 160px on the screen, even though you set the width to 200px and height to 100px.

With box-sizing: border-box;:

<div class="border-box"></div>


.border-box {
  width: 200px;
  height: 100px;
  padding: 20px;
  border: 10px solid black;
  box-sizing: border-box; 
  background-color: lightcoral;
}

Width Calculation:

Total Width: 200px (includes content, padding, and border)
Padding: 20px (left) + 20px (right) = 40px
Border: 10px (left) + 10px (right) = 20px
Content Width: 200px - 40px (padding) - 20px (border) = 140px

Height Calculation:

Total Height: 100px (includes content, padding, and border)
Padding: 20px (top) + 20px (bottom) = 40px
Border: 10px (top) + 10px (bottom) = 20px
Content Height: 100px - 40px (padding) - 20px (border) = 40px

Result: The div visually occupies exactly 200px by 100px on the screen, as the padding and border are included within the specified width and height. The content area, however, is reduced to fit within these constraints.

Summary:
Without border-box: The padding and border are added outside the specified width and height, resulting in a larger overall size (260px by 160px in this case).
With border-box: The padding and border are included within the specified width and height, so the overall size remains as specified (200px by 100px), but the content area is reduced (140px by 40px in this case).

**/

/** ---------------------------------------- --> */

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html {
  font-family: Urbanist;
}

body {
  width: 100%;
  height: 100vh;
  background-color: hsl(0, 0%, 94%);
}

#main-heading {
  padding: 40px 0;
  font-weight: bold;
  font-size: 48px;
  color: #031721;
  text-align: center;
}

p {
  line-height: 1.6;
  letter-spacing: 1px;
  font-size: 18px;
}

/* box model css  */
.section-one {
  width: 800px;
  background-color: #0f2c59;
  color: #fff;
  border: 20px solid #337ccf;
  padding: 50px;
  margin: 0 auto;
}

/** ------------------------------------- -->
/**  NOTES + TIPS 
/** ---------------------------------------- --> */

/*? When you set the width and height properties of an element with CSS, you just set the width and height of the content area. To calculate the full size of an element, you must also add padding, borders and margins. */

/* Default behavior üëâ  width = 800 + 50 + 50 + 20 + 20 + 150px + 150px  */
/* Default behavior üëâ  height = 500 + 50 + 50 + 20 + 20 + 100px + 100px  */

/** ------------------------------------- -->
/** INTERVIEW QUESTIONS
/** ---------------------------------------- --> */
/*? 1: Explain what the CSS Box Model is and its components. */

/*? 2: What is the purpose of the box-sizing property in CSS? ‚≠ê‚≠ê */
/* The box-sizing property controls how the total width and height of an element are calculated. The two values it can take are content-box (default) and border-box. content-box calculates the total size including padding and border, while border-box calculates the total size including only padding. */

/*? 3: How can you make an element's content box 300 pixels wide with a 10-pixel border and 20-pixel padding? */

/* section {
  width: 300px;
  border: 5px solid red;
  padding: 10px;
  box-sizing: border-box;
} */

/*? 4: How can you globally apply box-sizing: border-box; to all elements on a web page? ‚≠ê‚≠ê‚≠ê*/
/*? Here comes the Universal Operator  */
